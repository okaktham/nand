// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // DMux for RAM and Screen writes
    DMux4Way(in=load, sel=address[13..14], a=lr0, b=lr1, c=ls);

    Or(a=lr0, b=lr1, out=lr);

    RAM16K(in=in, load=lr, address=address[0..13], out=rout);
    Screen(in=in, load=ls, address=address[0..12], out=sout);
    Keyboard(out=kout);

    // Detect if address is exactly 0x6000 (binary 0110 0000 0000 0000)
    Not(in=address[15], out=a15bar);
    And(a=a15bar, b=address[14], out=a14ok);
    And(a=a14ok, b=address[13], out=a13ok);

    Or8Way(in=address[0..7], out=orlow1);
    Or8Way(in=address[8..12], out=orlow2);
    Or(a=orlow1, b=orlow2, out=orlow);
    Not(in=orlow, out=lowzero);

    And(a=a13ok, b=lowzero, out=iskeyboard);

    // Pick RAM/Screen output by address[13..14], then pick keyboard if matched exactly
    Mux4Way16(a=rout, b=rout, c=sout, d=false, sel=address[13..14], out=mainout);
    Mux16(a=mainout, b=kout, sel=iskeyboard, out=out);
}
